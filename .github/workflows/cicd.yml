name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run tests
      run: |
        pytest

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with: 
        credentials_json: '${{ secrets.GCP_SA_KEY}}'
        project_id: '${{ secrets.GCP_PROJECT_ID }}'

    
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    # Verify Google Cloud configuration
    - name: 'Verify Google Cloud configuration'
      run: |
        echo "Active project: $(gcloud config get-value project)"
        gcloud auth list

    - name: 'Generate SSH key'
      run: |
        ssh-keygen -t rsa -b 4096 -f ~/.ssh/google_compute_engine -N ""
    
    # Add SSH key to instance metadata
    - name: 'Add SSH key to instance'
      run: |
        gcloud compute instances add-metadata ${{ secrets.GCP_INSTANCE_NAME }} \
          --zone=${{ secrets.GCP_ZONE }} \
          --metadata-from-file=ssh-keys=<(echo "$(whoami):$(cat ~/.ssh/google_compute_engine.pub)")

    # Deploy to VM
    - name: 'Deploy to VM'
      run: |
        # Create app directory if it doesn't exist
        gcloud compute ssh ${{ secrets.GCP_INSTANCE_NAME }} \
          --zone=${{ secrets.GCP_ZONE }} \
          --command='mkdir -p ~/app'
        
        # Copy files to VM
        gcloud compute scp --zone=${{ secrets.GCP_ZONE }} \
          --recurse ./* ${{ secrets.GCP_INSTANCE_NAME }}:~/app/
        
        # Execute deployment script
        gcloud compute ssh ${{ secrets.GCP_INSTANCE_NAME }} \
          --zone=${{ secrets.GCP_ZONE }} \
          --command='cd ~/app && chmod +x scripts/deploy.sh && sudo ./scripts/deploy.sh'